{
    "collab_server" : "",
    "contents" : "\n###########################################################################\n# clinicalDataProcessed: processes clinical data in values.edit$table,\n# by removing non-informative columns.   \n##########################################################################\nclinicalDataProcessed <- reactive({\n\n  shinycat(\"In clinicalDataProcessed reactive...\\n\")\n\n  p = values.edit$table\n  if (is.null(p)) {\n\treturn(NULL)\n  } \n  #####################################################################\n  #  display only columns that have more than one possible value; this\n  #   removes many columns such as contact info. In addition all \n  #   columns specified by RM.COLS will be removed\n  #####################################################################\n  # show columns that have unique values; or display all if none \n  # but keep all characteristics* column\n  \n  g = grep(\"characteristics\", colnames(p))\n    \n  num.levels = apply(p, 2, function(x) nlevels(as.factor(x)))\n  i = num.levels > 1 | 1:ncol(p) %in% g \n\n  # keep source_name_ch1 and description \n  keep = colnames(p) %in% c(\"source_name_ch1\", \"description\")\n  if (sum(keep) > 0) {\n\ti[keep] = TRUE\n  }\n\n  if (sum(i) <= 1) {\n\ti = 1:ncol(p)\t\n  }\n  p = p[,i, drop = FALSE]\n\n \n  ## remove non-informative columns; but keep all if all columns would \n  ## be removed  \n  RM.COLS = c(\"status\", \"last_update_date\", \"submission_date\", \n\t\"supplementary_file\", \"geo_accession\")\n  m = match(RM.COLS, colnames(p))\n  m=m[!is.na(m)]\n  if (length(m) == ncol(p)) {\n\treturn(p)\n  } \n  \n  if (length(m) > 0) p=p[,-m, drop = FALSE]\n\n  m = match(colnames(exprInput()), rownames(p))\n  m = m[!is.na(m)]\n\n  if (sum(m) == 0) {\n\tvalues.edit$table = p\n\treturn (p)\n  }\n  p = p[m,,drop = FALSE]\n  \n  values.edit$table = p\n  shinycat(\"...done\\n\")\n  return(p)\n\n})\n\n\n########################################\n### Summary of Clinical Data table\n########################################  \nclinicalDataSummary <- reactive({\n  shinycat(\"In clinicalDataSummary reactive...\\n\")\n  t = clinicalDataProcessed()\n  if (is.null(t)) {\n\treturn(NULL)\n  }\n  vars = colnames(t)\n  a = apply(t, 2, function(x)levels(as.factor(x)))\n\n  ## if there are no duplicates in each row, the above returns the original table\n  ## therefore, make duplicates if necessary\n  if (!is.null(nrow(a))) {\n    tmp = rep(1,nrow(t))\n    tmp[1] = 2\n    t$DELETE=tmp\n    a = apply(t, 2, function(x)levels(as.factor(x)))\n    a$DELETE = NULL\n  } \n  \n  ## format function to truncate row contents with a place holder \" ...\"\n  format.it <-function(x, max) {\n    x = x[x!=\"\"]\n    if (length(x) <= max) return(x)\n    x[max] = \" ...\"\n    return(x[1:max])\n  }\n  a = lapply(a, format.it, Inf)\n  \n  a = sapply(a, paste, collapse = \", \")\n  cbind(column = vars, values = a)\n})\n\n########################################\n### ColumnNames of clinicial data table\n########################################  \nColumnNames <- reactive({\n  shinycat(\"In ColumnNames reactive...\\n\")\n  if (is.null(clinicalDataProcessed()) | is.null(exprInput())) {\n\treturn(NULL)\n  }\n  vars = colnames(clinicalDataProcessed())\n  vars <- as.list(vars)\n  return(vars)\n})\n\n\nobserve({\n  output$platformData <- DT::renderDataTable({ datatable(as.data.frame(platInfo()), rownames = FALSE,  \n                                 # extensions = 'ColReorder',\n   \t\t\t\t  options = list(dom = 'Rlfrtip', \n                                 \tpaging = TRUE, scrollY = \"400px\", autoWidth = TRUE,\n                                  \tsearchHighlight = TRUE, scrollX = \"auto\"\n                          \t  ),\n                          \t  filter = 'none', \n                          \t  selection = 'none') \n  })\n})\n\n############################################\n## displays the Clinical Summary Data Table\n###########################################\nobserve({  # observe needed since data object is a reactive function\n  shinycat(\"observe for clinicalDataSummary reactive...\\n\") \n\n  output$clinicalDataSummary <- DT::renderDataTable({ datatable(as.data.frame(clinicalDataSummary()), rownames = TRUE,  \n                                                                 extensions = 'ColReorder',\n                                                                 options = list(#dom = 'Rlfrtip', ajax = list(url = action), \n                                                                                paging = F,  searchHighlight = TRUE,\n\t\t\t\t\t\t\t\t\t\tautoWidth = TRUE, scrollY = \"400px\"),\n                                                                 filter = 'none', \n                                                                 selection = 'single') \n    \n  })\n\n\n  output$clinicalDataSummarySummary <- DT::renderDataTable({ datatable(as.data.frame(clinicalDataSummary()[,-1, drop = FALSE]), rownames = TRUE,  \n                          options = list(dom = 'Rlfrtip',  \n \t                         paging = F, scrollY = \"400px\",\n\t\t\t\t  searchHighlight = TRUE,\n\t\t\t\t  columnDefs = list(list(\n                                  \ttargets = 1,#: ncol(clinicalDataSummary()[-1, drop = FALSE]), # applies to the entire table\n                                        #width = \"200px\",\n                                        render = JS(\n                                        \t\"function(data, type, row, meta) {\",\n                                                \"return type == 'display' && data.length > 150 ?\",\n                                                \"'<span title=\\\"' + data + '\\\">' + data.substr(0, 150) + '...</span>' : data;\",\n                                        \"}\")\n                                   ))\n\t\t\t  ),\n\t\t\t  filter = 'none',\n\t\t\t  caption = HTML(\"<b> Summary of clinical data </b>\"), \n                          selection = 'none') \n    \n  })\n\n\n \n\n\n \n})\n\n###########################################################################################\n## Reactive for displaying the dataTable, since same display will be used multiple times\n##########################################################################################\ndisplayDataTable <-reactive({\n  shinycat(\"in displayDataTable reactive...\\n\") \n  depend = values.edit$table\n  t = DT::renderDataTable({ datatable(clinicalDataProcessed(), rownames = TRUE,\n       #                                               extensions = 'ColReorder',\n                                                      options = list(dom = 'Rlfrtip', #ajax = list(url = action1), \n\t\t\t\t\t\t\t\t    autoWidth = TRUE,\n                                                                     scrollX = \"auto\",\n                                                                     scrollY = \"400px\",\n                                                                     paging = F, \n                                                                     searchHighlight = TRUE,\n                                                                     columnDefs = list(list(\n                                                                       targets = 1: ncol(clinicalDataProcessed()), # applies to the entire table\n\t\t\t\t\t\t\t\t\twidth = \"200px\",\n                                                                        render = JS(\n                                                                         \"function(data, type, row, meta) {\",\n                                                                         \"return type == 'display' && data.length > 30 ?\",\n                                                                         \"'<span title=\\\"' + data + '\\\">' + data.substr(0, 30) + '...</span>' : data;\",\n                                                                         \"}\")\n                                                                     ))), \n                                                      select = list(target = \"column\"),\n                                                      filter = 'none')\n  })\nreturn(t)\n})\n\n\nobserve({\n  shinycat(\"observe for summaryModalTable\\n\")  \n  output$summaryModalTable <- DT::renderDataTable({ datatable(as.data.frame(clinicalDataSummary()), rownames = FALSE,  \n    extensions = 'ColReorder',\n    options = list(#dom = 'Rlfrtip', #ajax = list(url = action), \n                   paging = F,  searchHighlight = TRUE),\n                   filter = 'none', \n                   selection = 'single') \n  })\n})\n\nobserve ({\n  output$clinicalData <- displayDataTable()\n})\n\n\n",
    "created" : 1460426774130.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3321773216",
    "id" : "C856939F",
    "lastKnownWriteTime" : 1460427830,
    "last_content_update" : 1460427830,
    "path" : "~/Desktop/R-directory/shinyGEO/server/server-clinical.R",
    "project_path" : "server/server-clinical.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}